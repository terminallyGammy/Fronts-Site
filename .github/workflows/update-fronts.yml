name: Update Fronts (SimplyPlural → fronts.json)

on:
  schedule:
    - cron: '*/5 * * * *'     # every ~5 min
  workflow_dispatch: {}

permissions:
  contents: write

env:
  PAGES_BRANCH: main          # ← set to your Pages branch (e.g., gh-pages)
  PAGES_DIR: .                # ← set to 'docs' if your site serves from /docs

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Pages branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.PAGES_BRANCH }}
          fetch-depth: 0

      - name: "Debug: show branch & tree"
        shell: bash
        run: |
          echo "On branch: $(git rev-parse --abbrev-ref HEAD)"
          echo "GitHub Pages is expected at: branch='${{ env.PAGES_BRANCH }}' dir='${{ env.PAGES_DIR }}'"
          echo "Repo root contents:"; ls -la
          echo "PAGES_DIR contents:"; ls -la "${{ env.PAGES_DIR }}" || true

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch fronts from SimplyPlural (no-cache) → temp JSON
        shell: bash
        env:
          SP_TOKEN: ${{ secrets.SP_TOKEN }}
          PAGES_DIR: ${{ env.PAGES_DIR }}
        run: |
          set -euo pipefail
          test -n "${SP_TOKEN}" || { echo "ERROR: SP_TOKEN secret is not set"; exit 1; }
          mkdir -p "${PAGES_DIR}"
          # Fetch raw
          HTTP_CODE=$(curl -sS -o "${PAGES_DIR}/fronts.raw.json" -w "%{http_code}" \
            -H "Authorization: ${SP_TOKEN}" \
            -H "Accept: application/json" \
            -H "Cache-Control: no-cache" \
            -H "Pragma: no-cache" \
            https://api.apparyllis.com/v1/fronters/)
          echo "Fetch HTTP status: ${HTTP_CODE}"
          if [ "${HTTP_CODE}" != "200" ]; then
            echo "Non-200 from API; body follows:"; cat "${PAGES_DIR}/fronts.raw.json"; exit 1
          fi
          # Validate & pretty-print deterministically (sorted keys)
          jq -S . "${PAGES_DIR}/fronts.raw.json" > "${PAGES_DIR}/fronts.new.json"
          rm -f "${PAGES_DIR}/fronts.raw.json"

      - name: Show first 400 chars of new JSON (debug)
        shell: bash
        env:
          PAGES_DIR: ${{ env.PAGES_DIR }}
        run: |
          head -c 400 "${PAGES_DIR}/fronts.new.json" || true; echo

      - name: Diff against existing fronts.json (if any)
        shell: bash
        env:
          PAGES_DIR: ${{ env.PAGES_DIR }}
        run: |
          set -e
          if [ -f "${PAGES_DIR}/fronts.json" ]; then
            echo "Existing file found; computing diff (first 80 chars per line):"
            diff -u <(jq -S . "${PAGES_DIR}/fronts.json") "${PAGES_DIR}/fronts.new.json" | sed 's/\t/ /g' | cut -c1-80 || true
          else
            echo "No existing fronts.json; will create it."
          fi

      - name: Replace file only if changed
        shell: bash
        env:
          PAGES_DIR: ${{ env.PAGES_DIR }}
        run: |
          set -e
          if [ -f "${PAGES_DIR}/fronts.json" ] && cmp -s "${PAGES_DIR}/fronts.json" "${PAGES_DIR}/fronts.new.json"; then
            echo "No changes detected in JSON; keeping existing file."
            rm -f "${PAGES_DIR}/fronts.new.json"
            echo "NO_UPDATE=1" >> $GITHUB_ENV
          else
            mv "${PAGES_DIR}/fronts.new.json" "${PAGES_DIR}/fronts.json"
            echo "Updated ${PAGES_DIR}/fronts.json"
          fi

      - name: Validate final JSON
        if: env.NO_UPDATE != '1'
        shell: bash
        env:
          PAGES_DIR: ${{ env.PAGES_DIR }}
        run: |
          python -c "import json; json.load(open('${{ env.PAGES_DIR }}/fronts.json')); print('fronts.json is valid JSON')"

      - name: Commit and push if changed
        if: env.NO_UPDATE != '1'
        shell: bash
        env:
          PAGES_BRANCH: ${{ env.PAGES_BRANCH }}
          PAGES_DIR: ${{ env.PAGES_DIR }}
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "${PAGES_DIR}/fronts.json"
          if git diff --cached --quiet; then
            echo "No changes to commit after add (unexpected)."
            exit 0
          fi
          git commit -m "Update fronts.json [skip ci]"
          git push origin "${PAGES_BRANCH}"
